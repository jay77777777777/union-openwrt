#云编译公用核心
name: union-core

on:
  #公用核心标识
  workflow_call:
    inputs:
      CORE_TARGET:
        required: true
        type: string
      CORE_THEME:
        required: true
        type: string
      CORE_NAME:
        required: true
        type: string
      CORE_URL:
        required: true
        type: string
      CORE_PW:
        required: true
        type: string
      CORE_IP:
        required: true
        type: string

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  CORE_TARGET: ${{inputs.CORE_TARGET}}
  CORE_THEME: ${{inputs.CORE_THEME}}
  CORE_NAME: ${{inputs.CORE_NAME}}
  CORE_URL: ${{inputs.CORE_URL}}
  CORE_PW: ${{inputs.CORE_PW}}
  CORE_IP: ${{inputs.CORE_IP}}

jobs:
  union_core:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Projects
        uses: actions/checkout@main

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q)
          sudo -E rm -rf $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "1{s/\r$//;p;q}")
          sudo -E apt -yqq update
          sudo -E apt -yqq purge $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "2{s/\r$//;p;q}")
          sudo -E apt -yqq full-upgrade
          sudo -E apt -yqq install $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "3{s/\r$//;p;q}")
          sudo -E apt -yqq autoremove --purge
          sudo -E apt -yqq autoclean
          sudo -E apt -yqq clean
          sudo -E systemctl daemon-reload
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Initialization Values
        run: |
          export CORE_DATE=$(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S")
          export CORE_SOURCE=$(echo $CORE_URL | cut -d '/' -f 5-)
          export CORE_TYPE=$(sed -n "1{s/^#//;s/\r$//;p;q}" $GITHUB_WORKSPACE/Config/$CORE_TARGET.txt)

          echo "CORE_SOURCE=$CORE_SOURCE" >> $GITHUB_ENV
          echo "CORE_TARGET=$CORE_TARGET" >> $GITHUB_ENV
          echo "CORE_DATE=$CORE_DATE" >> $GITHUB_ENV
          echo "CORE_TYPE=$CORE_TYPE" >> $GITHUB_ENV
          echo "CORE_PW=$CORE_PW" >> $GITHUB_ENV
          echo "CORE_IP=$CORE_IP" >> $GITHUB_ENV

      - name: Check Scripts
        run: |
          cd ./Scripts

          dos2unix ./*.sh
          chmod +x ./*.sh

      - name: Clone OWRT Code
        run: |
          git clone $CORE_URL ./owrt
      
      - name: Fix AX6
        run: |
          if [ "$CORE_TARGET" == "Redmi-AX6" ]; then
            cd ./owrt
            # 因AX6无线驱动问题，暂时维持源码版本在20230501
            git reset --hard 26f3634631244eedfbdfd61ea6cc3a2d7f5d896f
            # Patch
            cp -rf $GITHUB_WORKSPACE/general/AX6/target/linux/ipq807x/image/generic.mk target/linux/ipq807x/image/
            echo 'Fix AX6 Done!'
          else
            echo 'Fix AX6 Skip!'
          fi

      - name: Load custom feeds
        run: |
          cd ./owrt
          echo 'src-git smpackage https://github.com/kenzok8/small-package' >> feeds.conf.default

      - name: Update Feeds
        run: |
          cd ./owrt

          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Custom Scripts
        run: |
          cd ./owrt

          $GITHUB_WORKSPACE/Scripts/Settings.sh

          cd ./package

          $GITHUB_WORKSPACE/Scripts/Plugins.sh

      - name: Custom Settings
        run: |
          cd ./owrt

          rm -rf ./tmp* ./.config*
          cat $GITHUB_WORKSPACE/Config/$CORE_TARGET.txt $GITHUB_WORKSPACE/Config/General.txt >> .config

          $GITHUB_WORKSPACE/Scripts/Extras.sh

          make defconfig

      - name: Cleanup Toolchain
        run: |
          cd ./owrt

          make dirclean

      - name: Download Packages
        run: |
          cd ./owrt

          make download -j$(nproc)

      - name: Compile Firmware
        run: |
          cd ./owrt

          make -j$(nproc) || make -j1 V=s

          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1
          echo "======================="

      - name: Package Firmware
        run: |
          cd ./owrt && mkdir ./upload

          rm -rf $(find ./bin/targets/ -iregex ".*\(json\|manifest\|buildinfo\|sha256sums\|packages\)$")
          cp -rf $(find ./bin/targets/ -type f -iname "*.*") ./upload/
          cp -rf ./.config ./upload/Config_"$CORE_TARGET"_"$CORE_SOURCE"_"$CORE_DATE".txt

          cd ./upload

          $GITHUB_WORKSPACE/Scripts/Renames.sh

      - name: Release Firmware
        uses: softprops/action-gh-release@master
        with:
          tag_name: ${{env.CORE_TARGET}}_${{env.CORE_SOURCE}}_${{env.CORE_DATE}}
          files: ./owrt/upload/*.*
          body: |
            这是个平台固件包，内含多个设备！
            请注意选择你需要的设备固件！
            不要问，更就完事了！

            源码：${{env.CORE_SOURCE}}
            平台：${{env.CORE_TARGET}}
            设备：${{env.CORE_TYPE}}
            密码：${{env.CORE_PW}}
            地址：${{env.CORE_IP}}

      - name: Delete Old Releases
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 6
          delete_tags: true

      - name: Delete Old Workflows
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 1
